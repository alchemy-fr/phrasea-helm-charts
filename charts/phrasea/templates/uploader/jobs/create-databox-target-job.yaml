{{- with .Values.databox }}
{{- $jobName := "create-databox-uploader-target" }}
{{ $tplArgs := dict "app" "uploader" "ctx" $.Values.uploader "glob" $ }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $jobName }}-script
data:
  job.sh: |
    #!/bin/sh
    set -ex

    bin/console app:create-target {{ .upload.uploaderTargetSlug | quote }} "Databox uploader" {{ .api.baseUrl }}/incoming-uploads
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      {{ include "imagePullSecrets" $ | indent 6 }}
      {{- if $.Values.nodeSelector }}
      nodeSelector: {{- toYaml $.Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      - name: scripts
        configMap:
          name: {{ $jobName }}-script
          defaultMode: 0777
      containers:
      - name: {{ $jobName }}
        image: {{ $.Values.repository.baseurl }}/ps-uploader-api-php:{{ $.Values.repository.tag }}
        imagePullPolicy: {{ $.Values.repository.imagePullPolicy }}
        args: ["/setup/job.sh"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: scripts
          mountPath: /setup/job.sh
          subPath: job.sh
        env:
        - name: UPLOADER_TARGET_SLUG
          value: {{ .upload.uploaderTargetSlug | quote }}
{{- include "envRef.phpApp" $tplArgs | indent 8 }}
        envFrom:
        - configMapRef:
            name: uploader-api-config
{{- include "envFrom.phpApp" $ | indent 8 }}
{{- include "envFrom.rabbitmq" $ | indent 8 }}
{{- include "envFrom.postgresql" $ | indent 8 }}
      restartPolicy: Never
  backoffLimit: 0
{{- end }}
